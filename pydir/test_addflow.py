#
# Python example for adding flow to the trento generated backgrounds.
#   Use this as example to insert radial and elliptic flow into backgrounds.
#   See comments for variable definitions and explanations.
#

import numpy as np
import matplotlib.pyplot as plt

#
# source term parameters
# rho = normalized radial distance 
# phi = azimuthal angle
#
rho = np.random.random(100000)**0.5
phi = np.random.random(100000)*2*np.pi

#
# Assume pT of 0.5 GeV
# assume e2 of 0.8 (to be generated by trento)
# set pion mass to 0.14 GeV
#
pT = 0.3
e2 = 0.8
mpi = 0.14

#
# rho_0 scaling parameter for radial flow
# from Retiere and Lisa, PRC70.044907 (2004), table 2
#
rho_0 = 0.85

#
# e2 scaling parameter for elliptic flow
# from Alver and Roland, PRC81.054905 (2010), fig 4
#
rho_2 = 0.15

#
# calculate initial transverse rapidity (yT)
#
eT = (mpi*mpi+pT*pT)**0.5
yT = 0.5 * np.log((eT+pT)/(eT-pT))
pT_initial = pT
yT_initial = yT


#
# apply flow as additive boost to transverse rapidity
#
yBoost = rho*rho_0 + rho_2*e2*np.cos(2*phi)
yT = yT_initial + yBoost

#
# convert back to pT
#
pT = mpi*np.cosh(yT)

#
# plot to check results
#
bins = 16
ycnt, edges = np.histogram(phi, bins, ([0.,2*np.pi]))
yval, edges = np.histogram(phi, bins, ([0.,2*np.pi]), weights=pT)
xval = edges[0:-1]+(np.pi)/(2.*bins)

plt.figure(1)
plt.axis([0.,2*np.pi,0.,1.1*max(yval)])
plt.xlabel('phi')
plt.ylabel('counts weighted by pT')
plt.errorbar(xval,yval,yerr=ycnt**0.5,fmt='ro-')
plt.show()

#print yBoost, pT, phi


